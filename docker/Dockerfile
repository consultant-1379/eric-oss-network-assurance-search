# ----------- Main params
# --- BASE OS Specific params
ARG BASE_OS_VERSION=SUSE_IMAGE_VERSION
ARG COMMON_BASE_OS_DOCKER_URL=armdocker.rnd.ericsson.se/proj-ldc/common_base_os_release/sles
ARG NODEJS_BUILDER_VERSION=20.12.2-0
ARG NODEJS_BUILDER_URL=armdocker.rnd.ericsson.se/proj-adp-cicd-drop/adp-nodejs-lts-builder-image
ARG BASE_OS_REPO=arm.sero.gic.ericsson.se/artifactory/proj-ldc-repo-rpm-local/common_base_os/sles/

# --- Other params

# ----------- Builder: Node.js
FROM $NODEJS_BUILDER_URL:$NODEJS_BUILDER_VERSION as nodejs

# ----------- Builder: EUI client (brand2)
FROM nodejs as builder_eui_client
# Dev flag to run commands that are specific to dev region.
ARG DEV

WORKDIR /eui_client

# Install NPM dependencies
COPY frontend/package.json package.json
COPY frontend/package-lock.json package-lock.json
COPY frontend/.npmrc .npmrc
RUN if [ "$DEV" = true ] ; then echo "DEV mode is ON" && npm install; else npm ci; fi

# Copy SRC and run build
COPY frontend/ .

RUN if [ "$DEV" = true ] ; then echo "DEV mode is ON" && npm run build:dev; else npm run build:prod ; fi

# ----------- Builder: Server (Node.js)
FROM nodejs as builder_server
ARG DEV

WORKDIR /server

# Install NPM dependencies
COPY backend/package.json package.json
COPY backend/package-lock.json package-lock.json
COPY backend/.npmrc .npmrc

RUN if [ "$DEV" = true ] ; then echo "DEV mode is ON" && npm install; else npm ci --omit=dev --unsafe-perm ; fi

# Copy SRC
COPY backend/ .

# Remove configs not needed for runtime, but can contain E/// sensitive information
RUN rm package-lock.json .npmrc

# ----------- Build Server
# The layer in the final image should consist of three separate layers only.
#   1. Common Base OS layer
#   2. Common Execution environment layer
#   3. Service layer

# ---- 1. Common Base OS layer
FROM $COMMON_BASE_OS_DOCKER_URL:$BASE_OS_VERSION as production

# ---- 2. Common Execution environment layer
ARG BASE_OS_REPO
ARG BASE_OS_VERSION

ARG CBO_HARDENING_REPO="https://arm.sero.gic.ericsson.se/artifactory/proj-ldc-repo-rpm-local/common_base_os/hardening"
ARG CBO_HARDENING_ARCHIVE="common-base-os-hardening-cxa301047-${BASE_OS_VERSION}.tar.gz"

RUN zypper addrepo -C -G -f https://${BASE_OS_REPO}${BASE_OS_VERSION} COMMON_BASE_OS_SLES_REPO \
    && zypper --gpg-auto-import-keys refresh \
    && zypper install -l -y curl \
    && zypper clean --all

RUN curl "${CBO_HARDENING_REPO}/${BASE_OS_VERSION}/${CBO_HARDENING_ARCHIVE}" --output ${CBO_HARDENING_ARCHIVE} \
    && tar -xf ${CBO_HARDENING_ARCHIVE} \
    && chmod 750 /cbo-harden.sh \
    && /cbo-harden.sh

RUN rm -f /cbo-harden.sh \
    && rm -f /${CBO_HARDENING_ARCHIVE}


RUN echo 'LANG=en_US.UTF-8' >> /etc/environment

RUN echo "264522:x:264522:264522:An Identity for eric-oss-network-assurance-search:/nonexistent:/bin/false" >>/etc/passwd
RUN echo "264522:!::0:::::" >>/etc/shadow

# ---- 3. Service layer
COPY --chown=264522:0 --from=nodejs /opt/nodejs/ /opt/nodejs/
COPY --chown=264522:0 --from=builder_server /server/ /runtime/server/
COPY --chown=264522:0 --from=builder_eui_client /eui_client/build /runtime/frontend/

ENV PATH=${PATH}:/opt/nodejs/latest/bin

ENV PATH=/runtime/bin:${PATH}
ENV NODE_ENV=production
ENV LANG=en_US.UTF-8

ADD --chown=264522:0 docker/entrypoint.sh /runtime/server

# Remove npm and its links as npm is not needed for running the Service
RUN rm -rf /opt/nodejs/latest/lib/node_modules/npm \
    && rm /opt/nodejs/latest/bin/npm \
    && rm /opt/nodejs/latest/bin/npx

USER 264522

COPY docker/probe.sh /runtime/probe.sh

# Add tini for process management
ENV TINI_VERSION v0.19.0
ADD --chown=264522:0 https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini

WORKDIR /runtime/server
ENTRYPOINT ["/tini", "-g", "--", "bash", "-c", "./entrypoint.sh"]

ARG COMMIT
ARG BUILD_DATE
ARG APP_VERSION
ARG RSTATE
ARG IMAGE_PRODUCT_NUMBER
LABEL \
    org.opencontainers.image.title=eric-oss-network-assurance-search \
    org.opencontainers.image.created=$BUILD_DATE \
    org.opencontainers.image.revision=$COMMIT \
    org.opencontainers.image.vendor=Ericsson \
    org.opencontainers.image.version=$APP_VERSION \
    com.ericsson.product-revision="${RSTATE}" \
    com.ericsson.product-number="$IMAGE_PRODUCT_NUMBER"
